/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MyContract } from "../MyContract";

export class MyContract__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyContract> {
    return super.deploy(overrides || {}) as Promise<MyContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MyContract {
    return super.attach(address) as MyContract;
  }
  connect(signer: Signer): MyContract__factory {
    return super.connect(signer) as MyContract__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyContract {
    return new Contract(address, _abi, signerOrProvider) as MyContract;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "retrieve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060006100216100cb60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350600180819055506100d3565b600033905090565b610734806100e26000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632e64cec11461005c578063715018a61461007a5780638da5cb5b14610084578063f2fde38b146100a2578063fe4b84df146100be575b600080fd5b6100646100da565b6040516100719190610668565b60405180910390f35b6100826100e4565b005b61008c61021e565b60405161009991906105ed565b60405180910390f35b6100bc60048036038101906100b79190610497565b610247565b005b6100d860048036038101906100d391906104c0565b6103f0565b005b6000600354905090565b6100ec610465565b73ffffffffffffffffffffffffffffffffffffffff1661010a61021e565b73ffffffffffffffffffffffffffffffffffffffff1614610160576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015790610628565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61024f610465565b73ffffffffffffffffffffffffffffffffffffffff1661026d61021e565b73ffffffffffffffffffffffffffffffffffffffff16146102c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ba90610628565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610333576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032a90610608565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900460ff1615610440576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043790610648565b60405180910390fd5b806003819055506001600260006101000a81548160ff02191690831515021790555050565b600033905090565b60008135905061047c816106d0565b92915050565b600081359050610491816106e7565b92915050565b6000602082840312156104a957600080fd5b60006104b78482850161046d565b91505092915050565b6000602082840312156104d257600080fd5b60006104e084828501610482565b91505092915050565b6104f281610694565b82525050565b6000610505602683610683565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061056b602083610683565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006105ab601383610683565b91507f416c726561647920696e697469616c697a6564000000000000000000000000006000830152602082019050919050565b6105e7816106c6565b82525050565b600060208201905061060260008301846104e9565b92915050565b60006020820190508181036000830152610621816104f8565b9050919050565b600060208201905081810360008301526106418161055e565b9050919050565b600060208201905081810360008301526106618161059e565b9050919050565b600060208201905061067d60008301846105de565b92915050565b600082825260208201905092915050565b600061069f826106a6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6106d981610694565b81146106e457600080fd5b50565b6106f0816106c6565b81146106fb57600080fd5b5056fea264697066735822122051d7db79821c81bdf394374e043f531a9729748980a80342d694ffa9031b1af464736f6c63430008000033";
