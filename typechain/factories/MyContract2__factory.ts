/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MyContract2 } from "../MyContract2";

export class MyContract2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyContract2> {
    return super.deploy(overrides || {}) as Promise<MyContract2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MyContract2 {
    return super.attach(address) as MyContract2;
  }
  connect(signer: Signer): MyContract2__factory {
    return super.connect(signer) as MyContract2__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyContract2 {
    return new Contract(address, _abi, signerOrProvider) as MyContract2;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "age",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getIncreaedAge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_age",
        type: "uint256",
      },
    ],
    name: "initializeV1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "retrieve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "returnDecreasedAge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060006100216100cb60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350600180819055506100d3565b600033905090565b6109df806100e26000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610131578063c06caea31461014f578063d09de08a1461016d578063f2fde38b14610177578063f4dc8a3314610193578063fe4b84df146101af576100b4565b8063262a9dff146100b95780632e64cec1146100d7578063392e53cd146100f55780634897be6014610113578063715018a61461011d578063844ad5d414610127575b600080fd5b6100c16101cb565b6040516100ce919061084e565b60405180910390f35b6100df6101d1565b6040516100ec919061084e565b60405180910390f35b6100fd6101db565b60405161010a91906107d3565b60405180910390f35b61011b6101ee565b005b610125610205565b005b61012f61033f565b005b610139610356565b60405161014691906107b8565b60405180910390f35b61015761037f565b60405161016491906107d3565b60405180910390f35b610175610392565b005b610191600480360381019061018c9190610653565b6103a9565b005b6101ad60048036038101906101a8919061067c565b610552565b005b6101c960048036038101906101c4919061067c565b6105c7565b005b60045481565b6000600354905090565b600260009054906101000a900460ff1681565b60016004546101fd919061087a565b600481905550565b61020d610621565b73ffffffffffffffffffffffffffffffffffffffff1661022b610356565b73ffffffffffffffffffffffffffffffffffffffff1614610281576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102789061080e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600160045461034e91906108d0565b600481905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600560009054906101000a900460ff1681565b60016003546103a1919061087a565b600381905550565b6103b1610621565b73ffffffffffffffffffffffffffffffffffffffff166103cf610356565b73ffffffffffffffffffffffffffffffffffffffff1614610425576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041c9061080e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610495576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048c906107ee565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600560009054906101000a900460ff16156105a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105999061082e565b60405180910390fd5b806004819055506001600560006101000a81548160ff02191690831515021790555050565b600260009054906101000a900460ff1615610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e9061082e565b60405180910390fd5b8060038190555050565b600033905090565b6000813590506106388161097b565b92915050565b60008135905061064d81610992565b92915050565b60006020828403121561066557600080fd5b600061067384828501610629565b91505092915050565b60006020828403121561068e57600080fd5b600061069c8482850161063e565b91505092915050565b6106ae81610904565b82525050565b6106bd81610916565b82525050565b60006106d0602683610869565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610736602083610869565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000610776601383610869565b91507f416c726561647920696e697469616c697a6564000000000000000000000000006000830152602082019050919050565b6107b281610942565b82525050565b60006020820190506107cd60008301846106a5565b92915050565b60006020820190506107e860008301846106b4565b92915050565b60006020820190508181036000830152610807816106c3565b9050919050565b6000602082019050818103600083015261082781610729565b9050919050565b6000602082019050818103600083015261084781610769565b9050919050565b600060208201905061086360008301846107a9565b92915050565b600082825260208201905092915050565b600061088582610942565b915061089083610942565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108c5576108c461094c565b5b828201905092915050565b60006108db82610942565b91506108e683610942565b9250828210156108f9576108f861094c565b5b828203905092915050565b600061090f82610922565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61098481610904565b811461098f57600080fd5b50565b61099b81610942565b81146109a657600080fd5b5056fea2646970667358221220ddbef46607aa7f8ab4d245af08c3b235cfe61a4563886d412a78c542497417c264736f6c63430008000033";
